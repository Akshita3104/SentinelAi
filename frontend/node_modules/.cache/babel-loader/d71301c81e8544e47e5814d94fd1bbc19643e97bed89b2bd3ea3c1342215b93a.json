{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{selectIsConnected,selectIsCapturing,selectInterfaces,selectCurrentInterface,connectToBackend,startCapture,stopCapture}from'../services/networkService';import NetworkMonitor from'../components/NetworkMonitor';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NetworkMonitorPage=()=>{const dispatch=useDispatch();const isConnected=useSelector(selectIsConnected);const isCapturing=useSelector(selectIsCapturing);const interfaces=useSelector(selectInterfaces);const currentInterface=useSelector(selectCurrentInterface);// Initialize WebSocket connection when component mounts\nuseEffect(()=>{if(!isConnected){dispatch(connectToBackend());}// Cleanup on unmount\nreturn()=>{if(isCapturing){dispatch(stopCapture());}};},[dispatch,isConnected,isCapturing]);const handleStartCapture=()=>{if(!currentInterface){alert('No network interface available');return;}dispatch(startCapture());};const handleStopCapture=()=>{dispatch(stopCapture());};const handleClearPackets=()=>{// Clear packets logic will be handled in the NetworkMonitor component\nconsole.log('Clear packets requested');};const handleInterfaceChange=e=>{const selectedInterface=e.target.value;// Interface change logic is now handled in the NetworkMonitor component\nconsole.log('Interface changed to:',selectedInterface);};const handleApplyFilter=filter=>{// Filter application logic is handled in the NetworkMonitor component\nconsole.log('Applying filter:',filter);};const handleMitigate=(target,action)=>{// Mitigation logic is handled in the NetworkMonitor component\nconsole.log(\"Mitigation requested: \".concat(action,\" \").concat(target));};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-100\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-white shadow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900\",children:\"Network Monitor\"})})}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-6 sm:px-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"border-4 border-dashed border-gray-200 rounded-lg p-4\",children:/*#__PURE__*/_jsx(NetworkMonitor,{isConnected:isConnected,isCapturing:isCapturing,interfaces:interfaces,currentInterface:currentInterface,onStartCapture:handleStartCapture,onStopCapture:handleStopCapture,onClearPackets:handleClearPackets,onInterfaceChange:handleInterfaceChange,onApplyFilter:handleApplyFilter,onMitigate:handleMitigate})})})})})]});};export default NetworkMonitorPage;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","selectIsConnected","selectIsCapturing","selectInterfaces","selectCurrentInterface","connectToBackend","startCapture","stopCapture","NetworkMonitor","jsx","_jsx","jsxs","_jsxs","NetworkMonitorPage","dispatch","isConnected","isCapturing","interfaces","currentInterface","handleStartCapture","alert","handleStopCapture","handleClearPackets","console","log","handleInterfaceChange","e","selectedInterface","target","value","handleApplyFilter","filter","handleMitigate","action","concat","className","children","onStartCapture","onStopCapture","onClearPackets","onInterfaceChange","onApplyFilter","onMitigate"],"sources":["C:/Users/Akshita/OneDrive - somaiya.edu/Akshita/Projects/SentinelAi/frontend/src/pages/NetworkMonitorPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { \n  selectIsConnected,\n  selectIsCapturing,\n  selectInterfaces,\n  selectCurrentInterface,\n  connectToBackend,\n  startCapture,\n  stopCapture,\n} from '../services/networkService';\nimport NetworkMonitor from '../components/NetworkMonitor';\n\nconst NetworkMonitorPage = () => {\n  const dispatch = useDispatch();\n  const isConnected = useSelector(selectIsConnected);\n  const isCapturing = useSelector(selectIsCapturing);\n  const interfaces = useSelector(selectInterfaces);\n  const currentInterface = useSelector(selectCurrentInterface);\n\n  // Initialize WebSocket connection when component mounts\n  useEffect(() => {\n    if (!isConnected) {\n      dispatch(connectToBackend());\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      if (isCapturing) {\n        dispatch(stopCapture());\n      }\n    };\n  }, [dispatch, isConnected, isCapturing]);\n\n  const handleStartCapture = () => {\n    if (!currentInterface) {\n      alert('No network interface available');\n      return;\n    }\n    dispatch(startCapture());\n  };\n\n  const handleStopCapture = () => {\n    dispatch(stopCapture());\n  };\n\n  const handleClearPackets = () => {\n    // Clear packets logic will be handled in the NetworkMonitor component\n    console.log('Clear packets requested');\n  };\n\n  const handleInterfaceChange = (e) => {\n    const selectedInterface = e.target.value;\n    // Interface change logic is now handled in the NetworkMonitor component\n    console.log('Interface changed to:', selectedInterface);\n  };\n\n  const handleApplyFilter = (filter) => {\n    // Filter application logic is handled in the NetworkMonitor component\n    console.log('Applying filter:', filter);\n  };\n\n  const handleMitigate = (target, action) => {\n    // Mitigation logic is handled in the NetworkMonitor component\n    console.log(`Mitigation requested: ${action} ${target}`);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <header className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Network Monitor</h1>\n        </div>\n      </header>\n      <main>\n        <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n          <div className=\"px-4 py-6 sm:px-0\">\n            <div className=\"border-4 border-dashed border-gray-200 rounded-lg p-4\">\n              <NetworkMonitor\n                isConnected={isConnected}\n                isCapturing={isCapturing}\n                interfaces={interfaces}\n                currentInterface={currentInterface}\n                onStartCapture={handleStartCapture}\n                onStopCapture={handleStopCapture}\n                onClearPackets={handleClearPackets}\n                onInterfaceChange={handleInterfaceChange}\n                onApplyFilter={handleApplyFilter}\n                onMitigate={handleMitigate}\n              />\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default NetworkMonitorPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}