{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport networkReducer from '../services/networkService';\nimport { webSocketService } from '../services/websocketService';\nexport const store = configureStore({\n  reducer: {\n    network: networkReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    thunk: {\n      extraArgument: {\n        webSocketService\n      }\n    },\n    serializableCheck: {\n      // Ignore these action types\n      ignoredActions: ['network/connect/fulfilled'],\n      // Ignore these field paths in all actions\n      ignoredActionPaths: ['meta.arg', 'payload.timestamp'],\n      // Ignore these paths in the state\n      ignoredPaths: ['network.packets']\n    }\n  })\n});\n\n// Initialize WebSocket connection when the store is created\nstore.dispatch(connectToBackend());","map":{"version":3,"names":["configureStore","networkReducer","webSocketService","store","reducer","network","middleware","getDefaultMiddleware","thunk","extraArgument","serializableCheck","ignoredActions","ignoredActionPaths","ignoredPaths","dispatch","connectToBackend"],"sources":["C:/Users/Akshita/OneDrive - somaiya.edu/Akshita/Projects/SentinelAi/frontend/src/app/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport networkReducer from '../services/networkService';\nimport { webSocketService } from '../services/websocketService';\n\nexport const store = configureStore({\n  reducer: {\n    network: networkReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: { webSocketService },\n      },\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: ['network/connect/fulfilled'],\n        // Ignore these field paths in all actions\n        ignoredActionPaths: ['meta.arg', 'payload.timestamp'],\n        // Ignore these paths in the state\n        ignoredPaths: ['network.packets'],\n      },\n    }),\n});\n\n// Initialize WebSocket connection when the store is created\nstore.dispatch(connectToBackend());\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,SAASC,gBAAgB,QAAQ,8BAA8B;AAE/D,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACPC,OAAO,EAAEJ;EACX,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,KAAK,EAAE;MACLC,aAAa,EAAE;QAAEP;MAAiB;IACpC,CAAC;IACDQ,iBAAiB,EAAE;MACjB;MACAC,cAAc,EAAE,CAAC,2BAA2B,CAAC;MAC7C;MACAC,kBAAkB,EAAE,CAAC,UAAU,EAAE,mBAAmB,CAAC;MACrD;MACAC,YAAY,EAAE,CAAC,iBAAiB;IAClC;EACF,CAAC;AACL,CAAC,CAAC;;AAEF;AACAV,KAAK,CAACW,QAAQ,CAACC,gBAAgB,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}