{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshita\\\\OneDrive - somaiya.edu\\\\Akshita\\\\Projects\\\\SentinelAi\\\\frontend\\\\src\\\\pages\\\\NetworkMonitorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsConnected, selectIsCapturing, selectInterfaces, selectCurrentInterface, connectToBackend, startCapture, stopCapture } from '../services/networkService';\nimport NetworkMonitor from '../components/NetworkMonitor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkMonitorPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isConnected = useSelector(selectIsConnected);\n  const isCapturing = useSelector(selectIsCapturing);\n  const interfaces = useSelector(selectInterfaces);\n  const currentInterface = useSelector(selectCurrentInterface);\n\n  // Initialize WebSocket connection when component mounts\n  useEffect(() => {\n    if (!isConnected) {\n      dispatch(connectToBackend());\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (isCapturing) {\n        dispatch(stopCapture());\n      }\n    };\n  }, [dispatch, isConnected, isCapturing]);\n  const handleStartCapture = () => {\n    if (!currentInterface) {\n      alert('No network interface available');\n      return;\n    }\n    dispatch(startCapture());\n  };\n  const handleStopCapture = () => {\n    dispatch(stopCapture());\n  };\n  const handleClearPackets = () => {\n    // Clear packets logic will be handled in the NetworkMonitor component\n    console.log('Clear packets requested');\n  };\n  const handleInterfaceChange = e => {\n    const selectedInterface = e.target.value;\n    // Interface change logic is now handled in the NetworkMonitor component\n    console.log('Interface changed to:', selectedInterface);\n  };\n  const handleApplyFilter = filter => {\n    // Filter application logic is handled in the NetworkMonitor component\n    console.log('Applying filter:', filter);\n  };\n  const handleMitigate = (target, action) => {\n    // Mitigation logic is handled in the NetworkMonitor component\n    console.log(`Mitigation requested: ${action} ${target}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-900\",\n          children: \"Network Monitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-6 sm:px-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-4 border-dashed border-gray-200 rounded-lg p-4\",\n            children: /*#__PURE__*/_jsxDEV(NetworkMonitor, {\n              isConnected: isConnected,\n              isCapturing: isCapturing,\n              interfaces: interfaces,\n              currentInterface: currentInterface,\n              onStartCapture: handleStartCapture,\n              onStopCapture: handleStopCapture,\n              onClearPackets: handleClearPackets,\n              onInterfaceChange: handleInterfaceChange,\n              onApplyFilter: handleApplyFilter,\n              onMitigate: handleMitigate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkMonitorPage, \"kWdZKR3XL1t/ghzzkxd8djSzuzA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = NetworkMonitorPage;\nexport default NetworkMonitorPage;\nvar _c;\n$RefreshReg$(_c, \"NetworkMonitorPage\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","selectIsConnected","selectIsCapturing","selectInterfaces","selectCurrentInterface","connectToBackend","startCapture","stopCapture","NetworkMonitor","jsxDEV","_jsxDEV","NetworkMonitorPage","_s","dispatch","isConnected","isCapturing","interfaces","currentInterface","handleStartCapture","alert","handleStopCapture","handleClearPackets","console","log","handleInterfaceChange","e","selectedInterface","target","value","handleApplyFilter","filter","handleMitigate","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStartCapture","onStopCapture","onClearPackets","onInterfaceChange","onApplyFilter","onMitigate","_c","$RefreshReg$"],"sources":["C:/Users/Akshita/OneDrive - somaiya.edu/Akshita/Projects/SentinelAi/frontend/src/pages/NetworkMonitorPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { \n  selectIsConnected,\n  selectIsCapturing,\n  selectInterfaces,\n  selectCurrentInterface,\n  connectToBackend,\n  startCapture,\n  stopCapture,\n} from '../services/networkService';\nimport NetworkMonitor from '../components/NetworkMonitor';\n\nconst NetworkMonitorPage = () => {\n  const dispatch = useDispatch();\n  const isConnected = useSelector(selectIsConnected);\n  const isCapturing = useSelector(selectIsCapturing);\n  const interfaces = useSelector(selectInterfaces);\n  const currentInterface = useSelector(selectCurrentInterface);\n\n  // Initialize WebSocket connection when component mounts\n  useEffect(() => {\n    if (!isConnected) {\n      dispatch(connectToBackend());\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      if (isCapturing) {\n        dispatch(stopCapture());\n      }\n    };\n  }, [dispatch, isConnected, isCapturing]);\n\n  const handleStartCapture = () => {\n    if (!currentInterface) {\n      alert('No network interface available');\n      return;\n    }\n    dispatch(startCapture());\n  };\n\n  const handleStopCapture = () => {\n    dispatch(stopCapture());\n  };\n\n  const handleClearPackets = () => {\n    // Clear packets logic will be handled in the NetworkMonitor component\n    console.log('Clear packets requested');\n  };\n\n  const handleInterfaceChange = (e) => {\n    const selectedInterface = e.target.value;\n    // Interface change logic is now handled in the NetworkMonitor component\n    console.log('Interface changed to:', selectedInterface);\n  };\n\n  const handleApplyFilter = (filter) => {\n    // Filter application logic is handled in the NetworkMonitor component\n    console.log('Applying filter:', filter);\n  };\n\n  const handleMitigate = (target, action) => {\n    // Mitigation logic is handled in the NetworkMonitor component\n    console.log(`Mitigation requested: ${action} ${target}`);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <header className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Network Monitor</h1>\n        </div>\n      </header>\n      <main>\n        <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n          <div className=\"px-4 py-6 sm:px-0\">\n            <div className=\"border-4 border-dashed border-gray-200 rounded-lg p-4\">\n              <NetworkMonitor\n                isConnected={isConnected}\n                isCapturing={isCapturing}\n                interfaces={interfaces}\n                currentInterface={currentInterface}\n                onStartCapture={handleStartCapture}\n                onStopCapture={handleStopCapture}\n                onClearPackets={handleClearPackets}\n                onInterfaceChange={handleInterfaceChange}\n                onApplyFilter={handleApplyFilter}\n                onMitigate={handleMitigate}\n              />\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default NetworkMonitorPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}