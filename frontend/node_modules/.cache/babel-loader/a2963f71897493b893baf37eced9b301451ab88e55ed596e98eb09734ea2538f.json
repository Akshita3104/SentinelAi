{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshita\\\\OneDrive - somaiya.edu\\\\Akshita\\\\Projects\\\\SentinelAi\\\\frontend\\\\src\\\\pages\\\\NetworkMonitorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNetworkStatus, selectIsCapturing, selectInterfaces, selectActiveInterface, connectToCapture, startCapture, stopCapture, setActiveInterface, clearPackets, selectFilteredPackets, selectStats, selectBandwidth, selectFilters, setFilter, selectSelectedPacket, selectPacket } from '../features/network/networkSlice';\nimport NetworkMonitor from '../components/NetworkMonitor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkMonitorPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const status = useSelector(selectNetworkStatus);\n  const isConnected = status === 'connected';\n  const isCapturing = useSelector(selectIsCapturing);\n  const interfaces = useSelector(selectInterfaces);\n  const currentInterface = useSelector(selectActiveInterface);\n  const packets = useSelector(selectFilteredPackets);\n  const stats = useSelector(selectStats);\n  const bandwidth = useSelector(selectBandwidth);\n  const filters = useSelector(selectFilters);\n  const selectedPacket = useSelector(selectSelectedPacket);\n\n  // Initialize WebSocket connection when component mounts\n  useEffect(() => {\n    dispatch(connectToCapture());\n\n    // Cleanup on unmount\n    return () => {\n      // Cleanup if needed\n    };\n  }, [dispatch]);\n  const handleStartCapture = () => {\n    dispatch(startCapture({\n      interface: currentInterface\n    }));\n  };\n  const handleStopCapture = () => {\n    dispatch(stopCapture());\n  };\n  const handleInterfaceChange = e => {\n    const newInterface = e.target.value;\n    dispatch(setActiveInterface(newInterface));\n\n    // Restart capture if already running\n    if (isCapturing) {\n      dispatch(stopCapture()).then(() => {\n        dispatch(startCapture({\n          interface: newInterface\n        }));\n      });\n    }\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch(setFilter({\n      [name]: value\n    }));\n  };\n  const handleClearPackets = () => {\n    dispatch(clearPackets());\n  };\n  const handleSelectPacket = packet => {\n    dispatch(selectPacket(packet));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Network Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetworkMonitor, {\n      isConnected: isConnected,\n      isCapturing: isCapturing,\n      interfaces: interfaces,\n      currentInterface: currentInterface,\n      packets: packets,\n      stats: stats,\n      bandwidth: bandwidth,\n      filters: filters,\n      selectedPacket: selectedPacket,\n      onStartCapture: handleStartCapture,\n      onStopCapture: handleStopCapture,\n      onInterfaceChange: handleInterfaceChange,\n      onFilterChange: handleFilterChange,\n      onClearPackets: handleClearPackets,\n      onSelectPacket: handleSelectPacket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkMonitorPage, \"1g18jWe0rdZAdRvg25MYM8qPsWw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = NetworkMonitorPage;\nexport default NetworkMonitorPage;\nvar _c;\n$RefreshReg$(_c, \"NetworkMonitorPage\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","selectNetworkStatus","selectIsCapturing","selectInterfaces","selectActiveInterface","connectToCapture","startCapture","stopCapture","setActiveInterface","clearPackets","selectFilteredPackets","selectStats","selectBandwidth","selectFilters","setFilter","selectSelectedPacket","selectPacket","NetworkMonitor","jsxDEV","_jsxDEV","NetworkMonitorPage","_s","dispatch","status","isConnected","isCapturing","interfaces","currentInterface","packets","stats","bandwidth","filters","selectedPacket","handleStartCapture","interface","handleStopCapture","handleInterfaceChange","e","newInterface","target","value","then","handleFilterChange","name","handleClearPackets","handleSelectPacket","packet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStartCapture","onStopCapture","onInterfaceChange","onFilterChange","onClearPackets","onSelectPacket","_c","$RefreshReg$"],"sources":["C:/Users/Akshita/OneDrive - somaiya.edu/Akshita/Projects/SentinelAi/frontend/src/pages/NetworkMonitorPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectNetworkStatus,\n  selectIsCapturing,\n  selectInterfaces,\n  selectActiveInterface,\n  connectToCapture,\n  startCapture,\n  stopCapture,\n  setActiveInterface,\n  clearPackets,\n  selectFilteredPackets,\n  selectStats,\n  selectBandwidth,\n  selectFilters,\n  setFilter,\n  selectSelectedPacket,\n  selectPacket\n} from '../features/network/networkSlice';\nimport NetworkMonitor from '../components/NetworkMonitor';\n\nconst NetworkMonitorPage = () => {\n  const dispatch = useDispatch();\n  const status = useSelector(selectNetworkStatus);\n  const isConnected = status === 'connected';\n  const isCapturing = useSelector(selectIsCapturing);\n  const interfaces = useSelector(selectInterfaces);\n  const currentInterface = useSelector(selectActiveInterface);\n  const packets = useSelector(selectFilteredPackets);\n  const stats = useSelector(selectStats);\n  const bandwidth = useSelector(selectBandwidth);\n  const filters = useSelector(selectFilters);\n  const selectedPacket = useSelector(selectSelectedPacket);\n\n  // Initialize WebSocket connection when component mounts\n  useEffect(() => {\n    dispatch(connectToCapture());\n    \n    // Cleanup on unmount\n    return () => {\n      // Cleanup if needed\n    };\n  }, [dispatch]);\n\n  const handleStartCapture = () => {\n    dispatch(startCapture({ interface: currentInterface }));\n  };\n\n  const handleStopCapture = () => {\n    dispatch(stopCapture());\n  };\n\n  const handleInterfaceChange = (e) => {\n    const newInterface = e.target.value;\n    dispatch(setActiveInterface(newInterface));\n    \n    // Restart capture if already running\n    if (isCapturing) {\n      dispatch(stopCapture()).then(() => {\n        dispatch(startCapture({ interface: newInterface }));\n      });\n    }\n  };\n  \n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    dispatch(setFilter({ [name]: value }));\n  };\n  \n  const handleClearPackets = () => {\n    dispatch(clearPackets());\n  };\n  \n  const handleSelectPacket = (packet) => {\n    dispatch(selectPacket(packet));\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Network Monitor</h1>\n      <NetworkMonitor \n        isConnected={isConnected}\n        isCapturing={isCapturing}\n        interfaces={interfaces}\n        currentInterface={currentInterface}\n        packets={packets}\n        stats={stats}\n        bandwidth={bandwidth}\n        filters={filters}\n        selectedPacket={selectedPacket}\n        onStartCapture={handleStartCapture}\n        onStopCapture={handleStopCapture}\n        onInterfaceChange={handleInterfaceChange}\n        onFilterChange={handleFilterChange}\n        onClearPackets={handleClearPackets}\n        onSelectPacket={handleSelectPacket}\n      />\n    </div>\n  );\n};\n\nexport default NetworkMonitorPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}